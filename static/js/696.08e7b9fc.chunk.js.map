{"version":3,"file":"static/js/696.08e7b9fc.chunk.js","mappings":"0QAEaA,EAAYC,EAAAA,EAAAA,IAAH,2DAKTC,EAAgBD,EAAAA,EAAAA,EAAH,iEAKbE,EAAYF,EAAAA,EAAAA,EAAH,uG,SCTTG,EAAW,SAAC,GAAoD,IAAD,IAAjDC,QAAWC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,aACrD,OACE,2BACE,SAACN,EAAD,+BAA8BK,MAC9B,SAACP,EAAD,CACES,IACED,EAAY,0CAC2BA,GACnC,+CAENE,IAAI,MAEN,SAACP,EAAD,UAAYG,MAGjB,EAEDF,EAASO,WAAa,CACpBN,QAASO,IAAAA,MAAgB,CACvBN,KAAMM,IAAAA,OAAAA,WACNL,UAAWK,IAAAA,OAAAA,WACXJ,aAAcI,IAAAA,UCnBlB,IAiBA,EAjBa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAYC,EAAAA,EAAAA,MAAZD,QAMN,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAYH,GAASI,MAAK,SAAAC,GAAC,OAAIN,EAAQM,EAAZ,GAC5B,GAAE,CAACL,KAGF,+BACGF,QADH,IACGA,OADH,EACGA,EAAMQ,KAAI,SAACjB,EAASkB,GAAV,OACT,SAACnB,EAAD,CAAsBC,QAASA,GAAhBkB,EADN,KAKhB,C,mCCXD,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIhC,KAAO,sBACLgC,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAe9B,UAAY8B,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["components/CastCard/CardCast.styled.jsx","components/CastCard/CastCard.jsx","views/Cast.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CardImage = styled.img`\n  width: 100px;\n  height: 150px;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const CastActor = styled.p`\n  margin-top: 10px;\n  font-size: 18px;\n  font-weight: bold;\n  color: grey;\n`;\n","import PropTypes from 'prop-types';\nimport { CardImage, CastCharacter, CastActor } from './CardCast.styled';\n\nexport const CastCard = ({ oneCast: { name, character, profile_path } }) => {\n  return (\n    <li>\n      <CastCharacter>{`Character: ${character}`}</CastCharacter>\n      <CardImage\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n            : 'https://dummyimage.com/100x150/000000/a2a3ab'\n        }\n        alt=\"\"\n      />\n      <CastActor>{name}</CastActor>\n    </li>\n  );\n};\n\nCastCard.propeTypes = {\n  oneCast: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n  }),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../servises/Api';\nimport { CastCard } from 'components/CastCard/CastCard';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    API.getCast(movieId).then(r => setCast(r));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast?.map((oneCast, index) => (\n        <CastCard key={index} oneCast={oneCast} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["CardImage","styled","CastCharacter","CastActor","CastCard","oneCast","name","character","profile_path","src","alt","propeTypes","PropTypes","useState","cast","setCast","movieId","useParams","useEffect","API","then","r","map","index","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}