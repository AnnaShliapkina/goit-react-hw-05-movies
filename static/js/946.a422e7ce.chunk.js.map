{"version":3,"file":"static/js/946.a422e7ce.chunk.js","mappings":"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","sources":["servises/Api.js","components/MovieDetailsPage/MovieDetailsPage.styled.jsx","views/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '?api_key=f5218897c19d56d1ba7debc5ad0a32a8';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day${KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getOneMovie = async value => {\n  const response = await axios.get(`/movie/${value}${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const getCast = async value => {\n  const response = await axios.get(\n    `/movie/${value}/credits${KEY}&language=en-US`\n  );\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getMovies = async value => {\n  const response = await axios.get(`search/movie${KEY}&query=${value}&page=1`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getReviews = async value => {\n  const response = await axios.get(\n    `/movie/${value}/reviews${KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 10px 50px;\n`;\n\nexport const Button = styled.button`\n  margin: 10px;\n  margin-left: 150px;\n  height: 30px;\n  width: 90px;\n\n  font-weight: 700;\n  background-color: aliceblue;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  width: 600px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  height: 100px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  padding-left: 50px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 0px;\n`;\n","import { useState, useEffect, Suspense, lazy } from 'react';\nimport {\n  Routes,\n  Route,\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport * as API from '../servises/Api';\n\nimport {\n  Container,\n  Button,\n  List,\n  Item,\n  Wrapper,\n  Text,\n} from 'components/MovieDetailsPage/MovieDetailsPage.styled';\n\nconst Cast = lazy(() => import('../views/Cast'));\nconst Reviews = lazy(() => import('../views/Reviews'));\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const [buttonPlace, setButtonPlace] = useState(null);\n  let { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    API.getOneMovie(movieId).then(r => setMovie(r));\n  }, [movieId]);\n\n  useEffect(() => {\n    if (location?.state?.from) {\n      setButtonPlace(location.state.from);\n    }\n  }, [location?.state?.from]);\n\n  return (\n    movie && (\n      <>\n        <Button\n          type=\"button\"\n          onClick={() => {\n            navigate(buttonPlace || '/');\n          }}\n        >\n          Go back\n        </Button>\n        <Container>\n          <img\n            src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`}\n            alt=\"\"\n          />\n          <List>\n            <Item>\n              <h2>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</h2>\n              <Text>{`User Score: ${Math.round(\n                movie.vote_average * 10\n              )}%`}</Text>\n            </Item>\n            <Item>\n              <h3>Overview</h3>\n              <Text>{movie.overview}</Text>\n            </Item>\n            <Item>\n              <h3>Genres</h3>\n              <Text>{movie.genres.map(genre => genre.name).join(' ')}</Text>\n            </Item>\n          </List>\n        </Container>\n        <Wrapper>\n          <h3>Additional information</h3>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n        </Wrapper>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n        </Suspense>\n      </>\n    )\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["KEY","axios","getTrendingMovies","response","data","results","map","id","title","getOneMovie","value","getCast","cast","name","character","profile_path","getMovies","getReviews","author","content","Container","styled","Button","List","Item","Wrapper","Text","Cast","lazy","Reviews","useState","movie","setMovie","buttonPlace","setButtonPlace","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","API","then","r","state","from","type","onClick","src","poster_path","alt","release_date","slice","Math","round","vote_average","overview","genres","genre","join","to","Suspense","fallback","path","element"],"sourceRoot":""}